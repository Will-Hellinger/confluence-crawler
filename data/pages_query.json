{
    "operationName":"SpacePagesQuery",
    "variables":{
        "includeRecommended" : false,
        "spaceId":"",
        "first" : "500",
        "maxNumberOfResults" : "500",
        "searchText" : "",
        "filters" : {
            "spaces" : {
                "spaceKeys" : []
            },
            "titleMatchOnly" : {
                "titleMatchOnly" : true
            },
            "statuses" : {
                "statuses" : ["CURRENT","DRAFT"]
            }
        },
        "sortBy" : [{"field":"LAST_MODIFIED_DATE","order":"DESC"}],
        "isLicensed":true,
        "scopes":["PAGE","WHITEBOARD","DATABASE","EMBED","FOLDER"]
    },
    "query":"query SpacePagesQuery($searchText: String!, $filters: ConfluenceSearchFilters!, $first: Int!, $maxNumberOfResults: Int!, $token: String, $sortBy: [ConfluenceContentSortField!], $isLicensed: Boolean!, $includeRecommended: Boolean = false, $spaceId: String = \"\", $scopes: [ConfluenceContentSearchScope!]!) {\n  confluenceContentSearch(\n    query: $searchText\n    scopes: $scopes\n    filters: $filters\n    first: $first\n    token: $token\n    sort: $sortBy\n    sessionAttributes: {experience: \"confluence.spacePages\"}\n  ) {\n    nodes {\n      ...PageCardSearchResult\n      __typename\n    }\n    totalCount\n    pageInfo {\n      hasNextPage\n      nextPageToken\n      __typename\n    }\n    __typename\n  }\n  objectRecommendations(\n    context: {containerId: $spaceId, product: \"confluence\"}\n    modelRequestParams: {experience: \"ConfSpacePages\", caller: \"confluence\"}\n    maxNumberOfResults: $maxNumberOfResults\n  ) @include(if: $includeRecommended) {\n    nodes {\n      id\n      content {\n        id\n        title\n        type\n        subType\n        status\n        blank\n        excerpt(length: 372)\n        links {\n          webui\n          editui\n          __typename\n        }\n        emoji: properties(keys: [\"emoji-title-published\", \"emoji-title-draft\"]) {\n          nodes {\n            id\n            key\n            value\n            __typename\n          }\n          __typename\n        }\n        history {\n          createdBy {\n            profilePicture {\n              path\n              __typename\n            }\n            displayName\n            ... on KnownUser {\n              accountId\n              __typename\n            }\n            ... on User {\n              accountId\n              __typename\n            }\n            __typename\n          }\n          ownedBy {\n            profilePicture {\n              path\n              __typename\n            }\n            displayName\n            ... on KnownUser {\n              accountId\n              __typename\n            }\n            ... on User {\n              accountId\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        metadata {\n          lastModifiedDate\n          currentuser {\n            favourited {\n              isFavourite\n              __typename\n            }\n            __typename\n          }\n          comments {\n            commentsCount\n            __typename\n          }\n          __typename\n        }\n        likes {\n          count\n          __typename\n        }\n        version {\n          by {\n            profilePicture {\n              path\n              __typename\n            }\n            displayName\n            ... on KnownUser {\n              accountId\n              __typename\n            }\n            ... on User {\n              accountId\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardSearchResult on ConfluenceSearchResult {\n  ... on ConfluenceContentSearchResult @include(if: $isLicensed) {\n    watchDialogContent: content {\n      ...WatchDialogContentFragment\n      __typename\n    }\n    __typename\n  }\n  ... on ConfluenceContentSearchResult {\n    id\n    title\n    url\n    excerpt\n    lastModified {\n      value\n      __typename\n    }\n    content {\n      id\n      type\n      subType\n      status\n      blank\n      links {\n        editui\n        __typename\n      }\n      emoji: properties(keys: [\"emoji-title-published\", \"emoji-title-draft\"]) {\n        nodes {\n          id\n          key\n          value\n          __typename\n        }\n        __typename\n      }\n      history {\n        createdBy {\n          profilePicture {\n            path\n            __typename\n          }\n          displayName\n          ... on KnownUser {\n            accountId\n            __typename\n          }\n          ... on User {\n            accountId\n            __typename\n          }\n          __typename\n        }\n        ownedBy {\n          profilePicture {\n            path\n            __typename\n          }\n          displayName\n          ... on KnownUser {\n            accountId\n            __typename\n          }\n          ... on User {\n            accountId\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      metadata {\n        currentuser {\n          favourited {\n            isFavourite\n            __typename\n          }\n          __typename\n        }\n        comments {\n          commentsCount\n          __typename\n        }\n        __typename\n      }\n      likes {\n        count\n        __typename\n      }\n      version {\n        by {\n          profilePicture {\n            path\n            __typename\n          }\n          displayName\n          ... on KnownUser {\n            accountId\n            __typename\n          }\n          ... on User {\n            accountId\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment WatchDialogContentFragment on Content {\n  id\n  currentUserIsWatching\n  type\n  space {\n    id\n    key\n    currentUser {\n      isWatched\n      isWatchingBlogs\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"
}